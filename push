#!/usr/bin/env ruby
repo='sickp/alpine-ruby'
release_tags = {
  '2.5' => %w[preview],
  '2.4' => %w[2 latest]
}

def error(message)
  puts message
  puts "Usage: #{__FILE__} {major}.{minor}.{patch}-r{revision} [tag]... ]"
  exit 1
end

def execute(cmd)
  puts "=> #{cmd}"
  system(cmd) || abort
end

version, *tags = ARGV
md = version&.match(/\A((\d+\.\d+)\.\d+)-r\d+\z/)
error("Unknown version: #{version}") unless md

dockerfile = File.join(File.dirname(__FILE__), 'versions', version, 'Dockerfile')
error("Missing Dockerfile #{dockerfile}") unless File.file?(dockerfile)

possible_tags = [ md[1], md[2] ] + release_tags.fetch(md[2], [])
puts "Possible tags: #{possible_tags.join(', ')}"

error('Must provide at least one tag.') if tags.empty?
puts "Given tags: #{tags.join(', ')}"

bad_tags = tags - possible_tags
error("Illegal tag(s): #{bad_tags.join(', ')}") unless bad_tags.empty?

puts "==== Pushing #{repo}:#{version} ===="
execute("docker image push #{repo}:#{version}")

tags.each do |tag|
  puts "==== Tagging #{repo}:#{tag} ===="
  execute("docker image tag #{repo}:#{version} #{repo}:#{tag}")
  execute("docker image push #{repo}:#{tag}")
  execute("docker image rm #{repo}:#{tag}")
end
